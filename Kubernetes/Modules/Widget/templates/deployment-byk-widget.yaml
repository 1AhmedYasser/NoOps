apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.release_name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.release_name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.release_name }}"
    spec:
      automountServiceAccountToken: false
      containers:
        - name: "{{ .Values.release_name }}"
          image: "{{ .Values.images.gui.registry }}/{{ .Values.images.gui.repository }}:{{ .Values.images.gui.tag }}"
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: widget-index-volume
              mountPath: /usr/share/nginx/html/widget/index.html
              subPath: index.html
            - name: widget-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - mountPath: /app/public/env-config.js
              name: widget-index-volume
              subPath: env-config.js
            - name: run
              mountPath: /var/run
            - name: log
              mountPath: /var/log/nginx
            - name: cache
              mountPath: /var/cache/nginx
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - CHOWN
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          resources:
            limits:
              cpu: "250m"
              memory: "512Mi"
              storage: "1Gi"
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 23
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 22
            periodSeconds: 10
      volumes:
        - name: widget-index-volume
          configMap:
            name: widget-index-config
        - name: widget-config
          configMap:
            name: widget-nginx-config
        - name: run
          emptyDir:
            medium: ""
        - name: log
          emptyDir:
            medium: ""
        - name: cache
          emptyDir:
            medium: ""
