apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.release_name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.release_name }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.release_name }}"
    spec:
      initContainers:
        - name: init-copy-files-backoffice
          image: "{{ .Values.images.backoffice.registry }}/{{ .Values.images.backoffice.repository }}:{{ .Values.images.backoffice.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../DataMapper/backoffice/ /workspace/app/module/
              
              ls -la /workspace/app/module/
          volumeMounts:
            - name: dmapper-volume
              mountPath: /workspace/app/module/
        - name: init-copy-files-analytics
          image: "{{ .Values.images.analytics.registry }}/{{ .Values.images.analytics.repository }}:{{ .Values.images.analytics.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../DataMapper/analytics /workspace/app/module/
              ls -la /workspace/app/module/
          volumeMounts:
            - name: dmapper-volume
              mountPath: /workspace/app/module/
        - name: init-copy-files-training
          image: "{{ .Values.images.training.registry }}/{{ .Values.images.training.repository }}:{{ .Values.images.training.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../DataMapper/training /workspace/app/module/
              ls -la /workspace/app/module/
          volumeMounts:
            - name: dmapper-volume
              mountPath: /workspace/app/module/
        - name: init-copy-files-services
          image: "{{ .Values.images.services.registry }}/{{ .Values.images.services.repository }}:{{ .Values.images.services.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              pwd
              cp -r ../DataMapper/services /workspace/app/module/
              ls -la /workspace/app/module/
          volumeMounts:
            - name: dmapper-volume
              mountPath: /workspace/app/module/
      containers:
        - name: "{{ .Values.release_name }}"
          image: "{{ .Values.images.scope.registry }}/{{ .Values.images.scope.repository }}:{{ .Values.images.scope.tag }}"
          env:
            - name: EXTENSION
              value: .hbs
          ports:
            - containerPort: 3000
              name: http
          volumeMounts:
            - name: dmapper-volume
              mountPath: /workspace/app/module/

          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 25
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 25
            periodSeconds: 10
      volumes:
        - name: dmapper-volume
          emptyDir: {}
