apiVersion: apps/v1
kind: Deployment
metadata:
  name: byk-resql
spec:
  selector:
    matchLabels:
      app: byk-resql
  template:
    metadata:
      labels:
        app: byk-resql
    spec:
      initContainers:
        - name: init-copy-files-backoffice
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p Resql
              echo test.yml
              cp -r /app/DSL/Resql/backoffice/ /root/DSL/
          volumeMounts:
            - name: buerokratt-dsl
              mountPath: /app/DSL
            - name: resql-volume
              mountPath: /root/DSL/
        - name: init-copy-files-analytics
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p Resql
              echo test.yml
              cp -r /app/DSL/Resql/analytics/ /root/DSL/
          volumeMounts:
            - name: analytics-dsl
              mountPath: /app/DSL
            - name: resql-volume
              mountPath: /root/DSL/
        - name: init-copy-files-training
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p Resql
              echo test.yml
              cp -r /app/DSL/Resql/training/ /root/DSL/
          volumeMounts:
            - name: training-dsl
              mountPath: /app/DSL
            - name: resql-volume
              mountPath: /root/DSL/
      containers:
        - name: byk-resql
          image: "{{ .Values.images.scope.registry }}/{{ .Values.images.scope.repository }}:{{ .Values.images.scope.tag }}"
          env:
            - name: logging.level.root
              value: "{{ .Values.env.LOGGING_LEVEL_ROOT }}"
            - name: SQLMS_DATASOURCES_0_NAME
              value: "{{ .Values.env.SQLMS_DATASOURCES_0_NAME }}"
            - name: SQLMS_DATASOURCES_0_JDBCURL
              value: "{{ .Values.env.SQLMS_DATASOURCES_0_JDBCURL }}"
            - name: SQLMS_DATASOURCES_0_USERNAME
              value: "{{ .Values.env.SQLMS_DATASOURCES_0_USERNAME }}"
            - name: SQLMS_DATASOURCES_0_PASSWORD
              value: "{{ .Values.env.SQLMS_DATASOURCES_0_PASSWORD }}"
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BOOT
              value: "{{ .Values.env.LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BOOT }}"
          ports:
            - containerPort: 8082
              name: http
          volumeMounts:
            - name: resql-volume
              mountPath: /DSL/
          livenessProbe:
            httpGet:
              path: /datasources
              port: 8082
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /datasources
              port: 8082
            initialDelaySeconds: 70
            periodSeconds: 10

      volumes:
        - name: buerokratt-dsl
          persistentVolumeClaim:
            claimName: pvc-buerokratt-dsl
        - name: analytics-dsl
          persistentVolumeClaim:
            claimName: pvc-analytics-dsl
        - name: training-dsl
          persistentVolumeClaim:
            claimName: pvc-training-dsl
        - name: resql-volume
          emptyDir: {}

