version: '3.9'
services:

  ruuter:
    container_name: byk-public-ruuter
    build:
      context: .
      network: host
    volumes:
      - ./DSL:/DSL
    ports:
      - 8080:8080
    networks:
      - bykstack

  priv-ruuter:
    container_name: byk-private-ruuter
    build:
      context: .
      network: host
    environment:
      - ruuter.cors.allowedOrigins=http://test.buerokratt.ee:3000
    volumes:
      - ./private.DSL:/DSL
    ports:
      - 8090:8080
    networks:
      - bykstack
      
  byk-tim:
    container_name: byk-tim
    image: riaee/byk-tim:07
    env_file: 
      - byk.env
    ports:
      - 8085:8443
    restart: always
    networks:
      - bykstack
  widget:
    container_name: byk-widget
    build:
      context: .
      network: host
    ports:
      - 3000:443
    volumes:
      - ./public/widget-index.html:/usr/share/nginx/html/widget/index.html
    networks:
      - bykstack
      
  resql:
    container_name: byk-resql
    build:
      context: .
      network: host
    ports:
      - 8082:8082
    volumes:
      - ./DSL.Resql:/workspace/app/templates/
    networks:
      - bykstack
      
  dmapper:
    container_name: byk-dmapper
    build:
      context: .
      network: host 
    ports:
      - 3000:3000
    volumes:
      - ./DSL.DMapper:/workspace/app/views/byk/
    networks:
      - bykstack
      

  tim-postgresql:
    container_name: tim-postgresql
    image: postgres:14.1
#    command: ["postgres", "-c", "ssl=on", "-c", "ssl_cert_file=/etc/tls/tls.crt", "-c", "ssl_key_file=/etc/tls/tls.key"]
    environment:
      - POSTGRES_USER=tim
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=tim
    volumes:
#      - ./tim-db/cert.crt:/etc/tls/tls.crt
#      - ./tim-db/key.key:/etc/tls/tls.key
      - tim-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - bykstack

  users-db:
    container_name: users-db
    image: postgres:14.1
#    command: ["postgres", "-c", "ssl=on", "-c", "ssl_cert_file=/etc/tls/tls.crt", "-c", "ssl_key_file=/etc/tls/tls.key"]
    environment:
      - POSTGRES_USER=byk
      - POSTGRES_PASSWORD=01234
      - POSTGRES_DB=byk
    volumes:
#      - ./users-db/cert.crt:/etc/tls/tls.crt
#      - ./users-db/key.key:/etc/tls/tls.key
      - users-db:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - bykstack
      
    byk-liquibase-update:
    image: liquibase/liquibase
    command: --url=jdbc:postgresql://DB_IP:5433/byk?user=byk --password= --changelog-file=/master.yml update
    ports:
      - 8000:8000
    volumes:
      - ./DSL.Liquibase/master.yml:/liquibase/master.yml
      - ./DSL.Liquibase/changelog:/liquibase/changelog
      - ./DSL.Liquibase/data:/liquibase/data
    networks:
      - bykstack


networks:
  bykstack:
    name: bykstack
    driver: bridge
    driver_opts:                         
       com.docker.network.driver.mtu: 1400
